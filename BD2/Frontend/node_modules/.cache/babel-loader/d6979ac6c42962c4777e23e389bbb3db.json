{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = BuildReducer;\n\nvar _actions = require('./actions');\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar INITIAL_STATE = {\n  values: {},\n  touched: {},\n  errors: undefined,\n  warnings: undefined,\n  successes: undefined,\n  asyncErrors: undefined,\n  asyncWarnings: undefined,\n  asyncSuccesses: undefined,\n  validating: undefined,\n  validationFailed: undefined,\n  validationFailures: 0,\n  asyncValidations: 0,\n  submitted: false,\n  submits: 0,\n  submitting: false\n};\n\nvar setFormState = function setFormState(state, _ref) {\n  var payload = _ref.payload;\n  return _extends({}, INITIAL_STATE, payload);\n};\n\nvar setValue = function setValue(state, _ref2) {\n  var _ref2$payload = _ref2.payload,\n      field = _ref2$payload.field,\n      value = _ref2$payload.value;\n\n  var newValues = _utils2.default.set(_utils2.default.clone(state.values), field, value);\n\n  return _extends({}, state, {\n    values: newValues\n  });\n}; // This should REPLACE all values. if that's not intended, we should\n// add a `setValues` method\n\n\nvar setAllValues = function setAllValues(state, _ref3) {\n  var values = _ref3.payload;\n  return _extends({}, state, {\n    values: values\n  });\n};\n\nvar setTouched = function setTouched(state, _ref4) {\n  var _ref4$payload = _ref4.payload,\n      field = _ref4$payload.field,\n      value = _ref4$payload.value;\n\n  var newTouched = _utils2.default.set(_utils2.default.clone(state.touched), field, value, true);\n\n  return _extends({}, state, {\n    touched: newTouched\n  });\n};\n\nvar setAllTouched = function setAllTouched(state, _ref5) {\n  var touched = _ref5.payload;\n  return _extends({}, state, {\n    touched: touched\n  });\n};\n\nvar setError = function setError(state, _ref6) {\n  var _ref6$payload = _ref6.payload,\n      _ref6$payload$field = _ref6$payload.field,\n      field = _ref6$payload$field === undefined ? '__root' : _ref6$payload$field,\n      value = _ref6$payload.value;\n\n  var newErrors = _utils2.default.cleanError(_utils2.default.set(_utils2.default.clone(state.errors), field, value, true));\n\n  return _extends({}, state, {\n    errors: newErrors\n  });\n};\n\nvar setWarning = function setWarning(state, _ref7) {\n  var _ref7$payload = _ref7.payload,\n      _ref7$payload$field = _ref7$payload.field,\n      field = _ref7$payload$field === undefined ? '__root' : _ref7$payload$field,\n      value = _ref7$payload.value;\n\n  var newWarnings = _utils2.default.cleanError(_utils2.default.set(_utils2.default.clone(state.warnings), field, value, true));\n\n  return _extends({}, state, {\n    warnings: newWarnings\n  });\n};\n\nvar setSuccess = function setSuccess(state, _ref8) {\n  var _ref8$payload = _ref8.payload,\n      _ref8$payload$field = _ref8$payload.field,\n      field = _ref8$payload$field === undefined ? '__root' : _ref8$payload$field,\n      value = _ref8$payload.value;\n\n  var newSuccesses = _utils2.default.cleanError(_utils2.default.set(_utils2.default.clone(state.successes), field, value, true));\n\n  return _extends({}, state, {\n    successes: newSuccesses\n  });\n};\n\nvar setAsyncWarning = function setAsyncWarning(state, _ref9) {\n  var _ref9$payload = _ref9.payload,\n      _ref9$payload$field = _ref9$payload.field,\n      field = _ref9$payload$field === undefined ? '__root' : _ref9$payload$field,\n      value = _ref9$payload.value;\n\n  var newWarnings = _utils2.default.cleanError(_utils2.default.set(_utils2.default.clone(state.asyncWarnings), field, value, true));\n\n  return _extends({}, state, {\n    asyncWarnings: newWarnings\n  });\n};\n\nvar setAsyncError = function setAsyncError(state, _ref10) {\n  var _ref10$payload = _ref10.payload,\n      _ref10$payload$field = _ref10$payload.field,\n      field = _ref10$payload$field === undefined ? '__root' : _ref10$payload$field,\n      value = _ref10$payload.value;\n\n  var newErrors = _utils2.default.cleanError(_utils2.default.set(_utils2.default.clone(state.asyncErrors), field, value, true));\n\n  return _extends({}, state, {\n    asyncErrors: newErrors\n  });\n};\n\nvar setAsyncSuccess = function setAsyncSuccess(state, _ref11) {\n  var _ref11$payload = _ref11.payload,\n      _ref11$payload$field = _ref11$payload.field,\n      field = _ref11$payload$field === undefined ? '__root' : _ref11$payload$field,\n      value = _ref11$payload.value;\n\n  var newSuccesses = _utils2.default.cleanError(_utils2.default.set(_utils2.default.clone(state.asyncSuccesses), field, value, true));\n\n  return _extends({}, state, {\n    asyncSuccesses: newSuccesses\n  });\n};\n\nvar validatingField = function validatingField(state, _ref12) {\n  var _ref12$payload = _ref12.payload,\n      field = _ref12$payload === undefined ? '__root' : _ref12$payload;\n\n  var validating = _utils2.default.clone(state.validating);\n\n  var asyncValidations = state.asyncValidations; // Only incriment validations if this field is going from falsey to true\n\n  asyncValidations = !_utils2.default.get(validating, field) ? asyncValidations + 1 : asyncValidations;\n  validating = _utils2.default.cleanError(_utils2.default.set(validating, field, true));\n  return _extends({}, state, {\n    asyncValidations: asyncValidations,\n    validating: validating\n  });\n};\n\nvar doneValidatingField = function doneValidatingField(state, _ref13) {\n  var _ref13$payload = _ref13.payload,\n      field = _ref13$payload === undefined ? '__root' : _ref13$payload;\n\n  var validating = _utils2.default.clone(state.validating);\n\n  var asyncValidations = state.asyncValidations; // Only incriment validations if this field is going from falsey to true\n\n  asyncValidations = _utils2.default.get(validating, field) ? asyncValidations - 1 : asyncValidations;\n  validating = _utils2.default.cleanError(_utils2.default.set(validating, field, false));\n  return _extends({}, state, {\n    asyncValidations: asyncValidations,\n    validating: validating\n  });\n};\n\nvar validationFailure = function validationFailure(state, _ref14) {\n  var _ref14$payload = _ref14.payload,\n      _ref14$payload$field = _ref14$payload.field,\n      field = _ref14$payload$field === undefined ? '__root' : _ref14$payload$field,\n      value = _ref14$payload.value;\n\n  var validationFailed = _utils2.default.clone(state.validationFailed);\n\n  var validationFailures = state.validationFailures; // Only incriment validations if this field is going from falsey to true\n\n  validationFailures = !_utils2.default.get(validationFailed, field) ? validationFailures + 1 : validationFailures;\n  validationFailed = _utils2.default.cleanError(_utils2.default.set(validationFailed, field, value));\n  return _extends({}, state, {\n    validationFailures: validationFailures,\n    validationFailed: validationFailed\n  });\n};\n\nvar validationSuccess = function validationSuccess(state, _ref15) {\n  var _ref15$payload = _ref15.payload,\n      field = _ref15$payload === undefined ? '__root' : _ref15$payload;\n\n  var validationFailed = _utils2.default.clone(state.validationFailed);\n\n  var validationFailures = state.validationFailures; // Only devcriment faulures if this field is going from true to false\n\n  validationFailures = _utils2.default.get(validationFailed, field) ? validationFailures - 1 : validationFailures;\n  validationFailed = _utils2.default.cleanError(_utils2.default.set(validationFailed, field, false));\n  return _extends({}, state, {\n    validationFailures: validationFailures,\n    validationFailed: validationFailed\n  });\n};\n\nvar submits = function submits(state) {\n  return _extends({}, state, {\n    submits: state.submits + 1\n  });\n};\n\nvar submitted = function submitted(state) {\n  return _extends({}, state, {\n    submitted: true\n  });\n};\n\nvar submitting = function submitting(state, _ref16) {\n  var submitting = _ref16.payload;\n  return _extends({}, state, {\n    submitting: submitting\n  });\n};\n\nvar reset = function reset(state, _ref17) {\n  var _ref17$payload$field = _ref17.payload.field,\n      field = _ref17$payload$field === undefined ? '__root' : _ref17$payload$field;\n\n  var newState = _utils2.default.clone(state);\n\n  _utils2.default.set(newState.values, field, undefined);\n\n  _utils2.default.set(newState.touched, field, undefined);\n\n  _utils2.default.set(newState.errors, field, undefined);\n\n  _utils2.default.set(newState.warnings, field, undefined);\n\n  _utils2.default.set(newState.successes, field, undefined);\n\n  _utils2.default.set(newState.asyncErrors, field, undefined);\n\n  _utils2.default.set(newState.asyncWarnings, field, undefined);\n\n  _utils2.default.set(newState.asyncSuccesses, field, undefined);\n\n  return _extends({}, state, newState);\n}; //\n\n\nfunction BuildReducer() {\n  var _ref18 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref18$defaultValues = _ref18.defaultValues,\n      defaultValues = _ref18$defaultValues === undefined ? {} : _ref18$defaultValues,\n      _ref18$values = _ref18.values,\n      values = _ref18$values === undefined ? {} : _ref18$values;\n\n  var COMBINED_INITIAL_STATE = _extends({}, INITIAL_STATE, {\n    values: _extends({}, defaultValues, values)\n  });\n\n  var reducer = function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : COMBINED_INITIAL_STATE;\n    var action = arguments[1];\n\n    switch (action.type) {\n      case _actions.SET_FORM_STATE:\n        return setFormState(state, action);\n\n      case _actions.SET_VALUE:\n        return setValue(state, action);\n\n      case _actions.SET_ALL_VALUES:\n        return setAllValues(state, action);\n\n      case _actions.SET_ERROR:\n        return setError(state, action);\n\n      case _actions.SET_WARNING:\n        return setWarning(state, action);\n\n      case _actions.SET_SUCCESS:\n        return setSuccess(state, action);\n\n      case _actions.SET_ASYNC_ERROR:\n        return setAsyncError(state, action);\n\n      case _actions.SET_ASYNC_WARNING:\n        return setAsyncWarning(state, action);\n\n      case _actions.SET_ASYNC_SUCCESS:\n        return setAsyncSuccess(state, action);\n\n      case _actions.SET_TOUCHED:\n        return setTouched(state, action);\n\n      case _actions.SET_ALL_TOUCHED:\n        return setAllTouched(state, action);\n\n      case _actions.SUBMITTED:\n        return submitted(state, action);\n\n      case _actions.SUBMITS:\n        return submits(state, action);\n\n      case _actions.SUBMITTING:\n        return submitting(state, action);\n\n      case _actions.RESET:\n        return reset(state, action);\n\n      case _actions.RESET_ALL:\n        return COMBINED_INITIAL_STATE;\n\n      case _actions.CLEAR_ALL:\n        return INITIAL_STATE;\n\n      case _actions.VALIDATION_FAILURE:\n        return validationFailure(state, action);\n\n      case _actions.VALIDATION_SUCCESS:\n        return validationSuccess(state, action);\n\n      case _actions.DONE_VALIDATING_FIELD:\n        return doneValidatingField(state, action);\n\n      case _actions.VALIDATING_FIELD:\n        return validatingField(state, action);\n\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}","map":null,"metadata":{},"sourceType":"script"}