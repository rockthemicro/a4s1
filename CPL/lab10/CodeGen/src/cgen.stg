literal(value) ::= "li $a0 <value>"

bigLiteral(higher, lower) ::= <<
li $a0 <higher>
sll $a0 $a0 16
ori $a0 <lower>
>>

global_var(var) ::= <<
<var>:
	.word 0
>>

ifthenelse(cond, then, elsee) ::= <<
<cond>
be $a0 0 else_label

<then>
jr end_of_if

else_label:
<elsee>

end_of_if:
>>

plus(e1, e2) ::= <<
<e1>
sw $a0 0($sp)
addiu $sp $sp -4
<e2>
lw $t1 4($sp)
add $a0 $t1 $a0
addiu $sp $sp 4
>>


sub(e1, e2) ::= <<
<e1>
sw $a0 0($sp)
addiu $sp $sp -4
<e2>
lw $t1 4($sp)
sub $a0 $t1 $a0
addiu $sp $sp 4
>>

div(e1, e2) ::= <<
<e1>
sw $a0 0($sp)
addiu $sp $sp -4
<e2>
lw $t1 4($sp)
div $t1 $a0
mfhi $a0
addiu $sp $sp 4
>>

mod(e1, e2) ::= <<
<e1>
sw $a0 0($sp)
addiu $sp $sp -4
<e2>
lw $t1 4($sp)
div $t1 $a0
mflo $a0
addiu $sp $sp 4
>>


sequence(e) ::= "<e; separator=\"\n\">"
